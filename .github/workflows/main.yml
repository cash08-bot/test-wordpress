name: Build and Push Docker Image to ECR + Upload Lambda JAR to S3

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPO_NAME: test-wprdpress-akash
  IMAGE_TAG: latest
  BUCKET_NAME: jn-dev-s3-614056699201-wordpress

jobs:
  build-and-deploy:
    name: Build & Push Docker Image to ECR + Upload to S3
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::614056699201:role/Cdk-deploy-dev-demo
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Maven
        uses: s4u/setup-maven-action@v1.11.0
        with:
          maven-version: '3.9.6'

      - name: Build Java project
        run: |
          mvn clean install
          echo "Listing contents of target directory:"
          ls -lh target/

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPO_NAME:$IMAGE_TAG .

      - name: Tag Docker Image with ECR URI
        run: |
          ECR_URI="${{ steps.login-ecr.outputs.registry }}/$ECR_REPO_NAME"
          docker tag $ECR_REPO_NAME:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

      - name: Push Docker Image to ECR
        run: |
          docker push $ECR_URI:$IMAGE_TAG

      - name: Rename built JAR to jn-dev-wordpress-lambda.jar
        run: |
          mkdir -p artifacts
          cp ./target/AWSLambda-1.0-SNAPSHOT.jar artifacts/jn-dev-wordpress-lambda.jar
          ls -lh artifacts/

      - name: Upload Lambda JAR to S3
        run: |
          aws s3 cp artifacts/jn-dev-wordpress-lambda.jar s3://${{ env.BUCKET_NAME }}/lambda-code/jn-dev-wordpress-lambda.jar --region ${{ env.AWS_REGION }}
